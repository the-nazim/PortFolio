{"ast":null,"code":"import _objectSpread from \"/home/nazim/new_volume/Portfolio/PortFolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/nazim/new_volume/Portfolio/PortFolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"decorative\", \"orientation\"];\n// src/separator.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NAME = \"Separator\";\nvar DEFAULT_ORIENTATION = \"horizontal\";\nvar ORIENTATIONS = [\"horizontal\", \"vertical\"];\nvar Separator = React.forwardRef((props, forwardedRef) => {\n  const {\n      decorative,\n      orientation: orientationProp = DEFAULT_ORIENTATION\n    } = props,\n    domProps = _objectWithoutProperties(props, _excluded);\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  const ariaOrientation = orientation === \"vertical\" ? orientation : void 0;\n  const semanticProps = decorative ? {\n    role: \"none\"\n  } : {\n    \"aria-orientation\": ariaOrientation,\n    role: \"separator\"\n  };\n  return /* @__PURE__ */jsx(Primitive.div, _objectSpread(_objectSpread(_objectSpread({\n    \"data-orientation\": orientation\n  }, semanticProps), domProps), {}, {\n    ref: forwardedRef\n  }));\n});\nSeparator.displayName = NAME;\nfunction isValidOrientation(orientation) {\n  return ORIENTATIONS.includes(orientation);\n}\nvar Root = Separator;\nexport { Root, Separator };","map":{"version":3,"names":["React","Primitive","jsx","NAME","DEFAULT_ORIENTATION","ORIENTATIONS","Separator","forwardRef","props","forwardedRef","decorative","orientation","orientationProp","domProps","_objectWithoutProperties","_excluded","isValidOrientation","ariaOrientation","semanticProps","role","div","_objectSpread","ref","displayName","includes","Root"],"sources":["/home/nazim/new_volume/Portfolio/PortFolio/node_modules/@radix-ui/react-separator/src/separator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n *  Separator\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Separator';\nconst DEFAULT_ORIENTATION = 'horizontal';\nconst ORIENTATIONS = ['horizontal', 'vertical'] as const;\n\ntype Orientation = (typeof ORIENTATIONS)[number];\ntype SeparatorElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SeparatorProps extends PrimitiveDivProps {\n  /**\n   * Either `vertical` or `horizontal`. Defaults to `horizontal`.\n   */\n  orientation?: Orientation;\n  /**\n   * Whether or not the component is purely decorative. When true, accessibility-related attributes\n   * are updated so that that the rendered element is removed from the accessibility tree.\n   */\n  decorative?: boolean;\n}\n\nconst Separator = React.forwardRef<SeparatorElement, SeparatorProps>((props, forwardedRef) => {\n  const { decorative, orientation: orientationProp = DEFAULT_ORIENTATION, ...domProps } = props;\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  // `aria-orientation` defaults to `horizontal` so we only need it if `orientation` is vertical\n  const ariaOrientation = orientation === 'vertical' ? orientation : undefined;\n  const semanticProps = decorative\n    ? { role: 'none' }\n    : { 'aria-orientation': ariaOrientation, role: 'separator' };\n\n  return (\n    <Primitive.div\n      data-orientation={orientation}\n      {...semanticProps}\n      {...domProps}\n      ref={forwardedRef}\n    />\n  );\n});\n\nSeparator.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isValidOrientation(orientation: any): orientation is Orientation {\n  return ORIENTATIONS.includes(orientation);\n}\n\nconst Root = Separator;\n\nexport {\n  Separator,\n  //\n  Root,\n};\nexport type { SeparatorProps };\n"],"mappings":";;;;AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,SAAA,QAAiB;AAmCtB,SAAAC,GAAA;AA7BJ,IAAMC,IAAA,GAAO;AACb,IAAMC,mBAAA,GAAsB;AAC5B,IAAMC,YAAA,GAAe,CAAC,cAAc,UAAU;AAiB9C,IAAMC,SAAA,GAAkBN,KAAA,CAAAO,UAAA,CAA6C,CAACC,KAAA,EAAOC,YAAA,KAAiB;EAC5F,MAAM;MAAEC,UAAA;MAAYC,WAAA,EAAaC,eAAA,GAAkBR;IAAiC,IAAII,KAAA;IAAbK,QAAA,GAAAC,wBAAA,CAAaN,KAAA,EAAAO,SAAA;EACxF,MAAMJ,WAAA,GAAcK,kBAAA,CAAmBJ,eAAe,IAAIA,eAAA,GAAkBR,mBAAA;EAE5E,MAAMa,eAAA,GAAkBN,WAAA,KAAgB,aAAaA,WAAA,GAAc;EACnE,MAAMO,aAAA,GAAgBR,UAAA,GAClB;IAAES,IAAA,EAAM;EAAO,IACf;IAAE,oBAAoBF,eAAA;IAAiBE,IAAA,EAAM;EAAY;EAE7D,OACE,eAAAjB,GAAA,CAACD,SAAA,CAAUmB,GAAA,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA;IACT,oBAAkBV;EAAA,GACdO,aAAA,GACAL,QAAA;IACJS,GAAA,EAAKb;EAAA,EACP;AAEJ,CAAC;AAEDH,SAAA,CAAUiB,WAAA,GAAcpB,IAAA;AAIxB,SAASa,mBAAmBL,WAAA,EAA8C;EACxE,OAAON,YAAA,CAAamB,QAAA,CAASb,WAAW;AAC1C;AAEA,IAAMc,IAAA,GAAOnB,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}